CHALLENGE: 3
var userReviews: [Double] = [4.0, 5.0, 3.5, 4.8, 2.0, 3.0, 4.2, 5.0, 1.5, 4.3]

Calculate Average Rating
var totalRating = 0.0
for rating in userReviews {
    totalRating += rating
}

let averageRating = totalRating / Double(userReviews.count)
print("The average rating is: \(averageRating)")

// Part 2: Count Reviews by Rating
var excellentCount = 0
var goodCount = 0
var averageCount = 0
var poorCount = 0

for rating in userReviews {
    switch rating {
    case 4.5...5.0:
        excellentCount += 1
    case 3.5..<4.5:
        goodCount += 1
    case 2.5..<3.5:
        averageCount += 1
    case 1.0..<2.5:
        poorCount += 1
    default:
        break
    }
}

// Print counts of each category
print("Excellent reviews (4.5 to 5.0): \(excellentCount)")
print("Good reviews (3.5 to 4.4): \(goodCount)")
print("Average reviews (2.5 to 3.4): \(averageCount)")
print("Poor reviews (1.0 to 2.4): \(poorCount)")

CHALLENGE: 4

// Function to calculate average rating
func calculateAverageRating(reviews: [Double]) -> Double {
    guard !reviews.isEmpty else { return 0.0 }
    let total = reviews.reduce(0, +)
    return total / Double(reviews.count)
}

// Function to count reviews by category
func countReviewsByCategory(reviews: [Double]) -> (excellent: Int, good: Int, average: Int, poor: Int) {
    var excellentCount = 0
    var goodCount = 0
    var averageCount = 0
    var poorCount = 0
    
    for review in reviews {
        switch review {
        case 4.5...5.0:
            excellentCount += 1
        case 3.0..<4.5:
            goodCount += 1
        case 2.5..<3.0:
            averageCount += 1
        case 1.0..<2.5:
            poorCount += 1
        default:
            break
        }
    }
    
    return (excellentCount, goodCount, averageCount, poorCount)
}

// Sample user reviews
let userReviews: [Double] = [5.0, 4.5, 3.0, 2.0, 1.5, 4.0, 3.5, 2.0, 4.8]

// Calculate average rating
let averageRating = calculateAverageRating(reviews: userReviews)
print("Average Rating: \(averageRating)")

// Count reviews by category
let (excellent, good, average, poor) = countReviewsByCategory(reviews: userReviews)
print("Excellent reviews: \(excellent)")
print("Good reviews: \(good)")
print("Average reviews: \(average)")
print("Poor reviews: \(poor)")
